(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135770,       2603]
NotebookOptionsPosition[    133975,       2567]
NotebookOutlinePosition[    134421,       2584]
CellTagsIndexPosition[    134378,       2581]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Here", " ", "is", " ", "a", " ", "3", " ", "x", " ", "2", " ", "x", " ", 
    "3", " ", "distribution"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"cd", "=", 
    RowBox[{"CategoricalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\"\<D\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<F\>\"", ",", "\"\<G\>\"", ",", "\"\<H\>\""}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Let", "'"}], "s", " ", "calculate", " ", "some", " ", 
     "probabilities"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"x1", "\[Equal]", "\"\<A\>\""}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "\[Distributed]", 
      "cd"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Not", " ", "sure", " ", "why", " ", "\"\<Conditioned\>\"", " ", 
      "symbol", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "work"}], ",", " ", 
     RowBox[{"as", " ", "below"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x3", " ", "\[Equal]", " ", "\"\<H\>\""}], "\[Conditioned]", 
      RowBox[{"x1", " ", "\[Equal]", " ", "\"\<A\>\""}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", " ", "x2", ",", " ", "x3"}], "}"}], 
      "\[Distributed]", " ", "cd"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.805477381261286*^9, 3.8054773818949223`*^9}, 
   3.805477475323398*^9, {3.8054775054326124`*^9, 3.8054776340180645`*^9}, {
   3.8054777300813885`*^9, 3.8054777353633757`*^9}, {3.805477767214077*^9, 
   3.805477780755312*^9}, {3.8054780952849617`*^9, 3.805478095472963*^9}, {
   3.805478487646333*^9, 3.805478564591777*^9}, {3.8054785969966936`*^9, 
   3.80547860818027*^9}, {3.805550395222221*^9, 3.805550409312208*^9}, 
   3.805550563567705*^9, {3.80558404818708*^9, 3.8055840486035385`*^9}, {
   3.805584151004672*^9, 3.8055841521560106`*^9}, {3.805584227535247*^9, 
   3.8055842287095556`*^9}, {3.8055843752796984`*^9, 3.8055843889718227`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"00e47e43-44eb-4cc0-a6ea-63efa024c308"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CategoricalDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"D\"", "\"E\""}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"F\"", "\"G\"", "\"H\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"D\"", "\"E\""}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"F\"", "\"G\"", "\"H\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                StyleBox[
                 TagBox[
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Association[
                    "InitialData" -> 
                    Association[
                    "A" -> Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]], "B" -> 
                    Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]], "C" -> 
                    Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]]], "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[
                    Association[{All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "D"} -> 
                    Association[{All, "D", "F"} -> 1, {All, "D", "G"} -> 
                    1, {All, "D", "H"} -> 1], {All, "E"} -> 
                    Association[{All, "E", "F"} -> 1, {All, "E", "G"} -> 
                    1, {All, "E", "H"} -> 1]], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association["D" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "D"}], "E" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "E"}]]], 
                    DirectedInfinity[1], 2, {All}]]], 3, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"D", "E"}, {
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}], 
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}], 3], "Meta" -> 
                    Association["ID" -> 230837520337617], "RowTarget" -> 20, 
                    "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[
                    Association[{All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "D"} -> 
                    Association[{All, "D", "F"} -> 1, {All, "D", "G"} -> 
                    1, {All, "D", "H"} -> 1], {All, "E"} -> 
                    Association[{All, "E", "F"} -> 1, {All, "E", "G"} -> 
                    1, {All, "E", "H"} -> 1]], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association["D" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "D"}], "E" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "E"}]]], 
                    DirectedInfinity[1], 2, {All}]]], 3, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"D", "E"}, {
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}], 
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}], 3], "Path" -> {}, 
                    "BaseIndices" -> {}, "DisplayedRowCount" -> 3, 
                    "DisplayedColumnCount" -> 2, "DataRowCount" -> 3, 
                    "DataColumnCount" -> 2, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1], 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["D", 
                    Style[
                    "D", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D"}, "ColumnHeader", False], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                    SpanFromLeft, SpanFromLeft, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["E", 
                    Style[
                    "E", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E"}, "ColumnHeader", False], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                    SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["F", 
                    Style[
                    "F", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "F"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "F"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["G", 
                    Style[
                    "G", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "G"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "G"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["H", 
                    Style[
                    "H", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "H"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "H"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["F", 
                    Style[
                    "F", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "F"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "F"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["G", 
                    Style[
                    "G", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "G"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "G"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["H", 
                    Style[
                    "H", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "H"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "H"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["A", 
                    Style[
                    "A", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["B", 
                    Style[
                    "B", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["C", 
                    Style[
                    "C", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                    "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
                    Left, Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> 
                    Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
                    Needs["Dataset`"]; 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                   Deploy, DefaultBaseStyle -> "Deploy"], 
                  Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], Magnification -> 
                 0.8 Inherited, StripOnInput -> False], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CategoricalDistribution[
   Association["Probabilities" -> {{{
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}, {
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}}, {{
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}, {
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}}, {{
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}, {
        Rational[1, 36], 
        Rational[1, 18], 
        Rational[1, 12]}}}, "Index" -> {
      Association["A" -> 1, "B" -> 2, "C" -> 3], 
      Association["D" -> 1, "E" -> 2], 
      Association["F" -> 1, "G" -> 2, "H" -> 3]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.805584400891944*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c3c262c7-04f2-471b-a85a-7558c568f4c9"],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{3.805584400918912*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a07b15c8-ed95-4872-a8e5-d4db6ab7b2c1"],

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x3", "\[Equal]", "\<\"H\"\>"}], "\[Conditioned]", 
    RowBox[{"x1", "\[Equal]", "\<\"A\"\>"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "\[Distributed]", 
    InterpretationBox[
     RowBox[{
      TagBox["CategoricalDistribution",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  GrayLevel[0.55], 
                  RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
                  GrayLevel[0.8], 
                  RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
                  GrayLevel[0.65], 
                  RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}},
                 Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029},
                 AspectRatio -> 1], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"D\"", "\"E\""}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"F\"", "\"G\"", "\"H\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{
                  GrayLevel[0.55], 
                  RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
                  GrayLevel[0.8], 
                  RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
                  GrayLevel[0.65], 
                  RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}},
                 Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029},
                 AspectRatio -> 1], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "3", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"D\"", "\"E\""}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"\"F\"", "\"G\"", "\"H\""}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                  TagBox[
                   StyleBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Association[
                    "InitialData" -> 
                    Association[
                    "A" -> Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]], "B" -> 
                    Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]], "C" -> 
                    Association["D" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]], "E" -> Association["F" -> NumberForm[
                    Rational[1, 36], 2], "G" -> NumberForm[
                    Rational[1, 18], 2], "H" -> NumberForm[
                    Rational[1, 12], 2]]]], "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[
                    Association[{All, 
                    TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "D"} -> 
                    Association[{All, "D", "F"} -> 1, {All, "D", "G"} -> 
                    1, {All, "D", "H"} -> 1], {All, "E"} -> 
                    Association[{All, "E", "F"} -> 1, {All, "E", "G"} -> 
                    1, {All, "E", "H"} -> 1]], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association["D" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "D"}], "E" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "E"}]]], 
                    DirectedInfinity[1], 2, {All}]]], 3, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"D", "E"}, {
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}], 
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}], 3], "Meta" -> 
                    Association["ID" -> 181604310223569], "RowTarget" -> 20, 
                    "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[
                    Association[{All, 
                    TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "D"} -> 
                    Association[{All, "D", "F"} -> 1, {All, "D", "G"} -> 
                    1, {All, "D", "H"} -> 1], {All, "E"} -> 
                    Association[{All, "E", "F"} -> 1, {All, "E", "G"} -> 
                    1, {All, "E", "H"} -> 1]], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association["D" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "D"}], "E" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "F" -> TypeSystem`PackageScope`UnknownShape[False], "G" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "H" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 3, {All, "E"}]]], 
                    DirectedInfinity[1], 2, {All}]]], 3, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"D", "E"}, {
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}], 
                    
                    TypeSystem`Struct[{"F", "G", "H"}, {
                    TypeSystem`AnyType, TypeSystem`AnyType, 
                    TypeSystem`AnyType}]}], 3], "Path" -> {}, 
                    "BaseIndices" -> {}, "DisplayedRowCount" -> 3, 
                    "DisplayedColumnCount" -> 2, "DataRowCount" -> 3, 
                    "DataColumnCount" -> 2, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1], 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["D", 
                    Style[
                    "D", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D"}, "ColumnHeader", False], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                    SpanFromLeft, SpanFromLeft, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["E", 
                    Style[
                    "E", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E"}, "ColumnHeader", False], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                    SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["F", 
                    Style[
                    "F", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "F"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "F"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["G", 
                    Style[
                    "G", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "G"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "G"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["H", 
                    Style[
                    "H", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "D", "H"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "D", "H"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["F", 
                    Style[
                    "F", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "F"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "F"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["G", 
                    Style[
                    "G", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "G"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "G"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["H", 
                    Style[
                    "H", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "E", "H"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    All, "E", "H"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["A", 
                    Style[
                    "A", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["A"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["B", 
                    Style[
                    "B", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["B"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["C", 
                    Style[
                    "C", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["D"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 36], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["F"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 18], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["G"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[
                    Rational[1, 12], 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][{
                    Key["C"], 
                    Key["E"], 
                    Key["H"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                    "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
                    Left, Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> 
                    Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
                    Needs["Dataset`"]; 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    Magnification -> 0.8 Inherited, StripOnInput -> False], 
                   "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     CategoricalDistribution[
      Association["Probabilities" -> {{{
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}, {
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}}, {{
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}, {
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}}, {{
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}, {
           Rational[1, 36], 
           Rational[1, 18], 
           Rational[1, 12]}}}, "Index" -> {
         Association["A" -> 1, "B" -> 2, "C" -> 3], 
         Association["D" -> 1, "E" -> 2], 
         Association["F" -> 1, "G" -> 2, "H" -> 3]}]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.805584401914336*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"4021d7e4-a3d6-4890-959b-fb7f5cb0b89d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Marginal", "/", "elementary"}], " ", 
   RowBox[{"probabilities", ":", " ", 
    RowBox[{
     RowBox[{"P", "[", "x_", "]"}], " ", "takes", " ", "in", " ", "a", " ", 
     "predicate", " ", "and", " ", "plugs", " ", "it", " ", "into", " ", 
     "Probability"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.80558568206345*^9, 3.805585708955045*^9}, {
  3.805585787033383*^9, 
  3.8055857920984697`*^9}},ExpressionUUID->"a41f653b-152c-49a0-ae72-\
f42f9ce9d3f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "x_", "]"}], ":=", 
  RowBox[{"Probability", "[", 
   RowBox[{"x", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "\[Distributed]", "cd"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8055851060339403`*^9, 3.805585166824977*^9}, {
  3.805585366839759*^9, 3.8055854618855867`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"12312d94-aa30-4d12-82bf-d29a83faa3f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", 
  RowBox[{"x1", "\[Equal]", "\"\<A\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8055854703437204`*^9, 3.805585480328661*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1ee6c214-66a2-44a9-b192-dcd78ff45bdb"],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{3.8055854845332546`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"918f34c5-fa02-4fec-abf5-1b5751e9da99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", 
  RowBox[{
   RowBox[{"x1", "\[Equal]", "\"\<A\>\""}], "||", 
   RowBox[{"x1", "\[Equal]", "\"\<B\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8055854902979493`*^9, 3.8055855332714505`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9eeb7159-26b1-4fad-8983-04d422dc19f0"],

Cell[BoxData[
 FractionBox["2", "3"]], "Output",
 CellChangeTimes->{3.805585539550206*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"5ad4d564-518c-4e01-aca6-165cdbcef893"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Conditional", " ", 
   RowBox[{"probabilities", ":", " ", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", "takes", " ", "in", " ", 
     "two", " ", "predicates", " ", "and", " ", "can", " ", "be", " ", 
     "interpreted", " ", "as", " ", 
     "\"\<probability of x_ given y_\>\""}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8055857217899075`*^9, 3.805585769938216*^9}, {
  3.8055858002170725`*^9, 
  3.805585803988903*^9}},ExpressionUUID->"e70c19a7-81c8-4fb4-89c7-\
673a12021fc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"x", " ", "&&", " ", "y"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "\[Distributed]", 
      "cd"}]}], "]"}], " ", "/", " ", 
   RowBox[{"Probability", "[", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "x3"}], "}"}], "\[Distributed]", 
      "cd"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.805585566620859*^9, 3.805585621224086*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ccf6d51a-6299-4ab0-8743-1e3160aca2e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "[", 
  RowBox[{
   RowBox[{"x1", "\[Equal]", "\"\<A\>\""}], ",", 
   RowBox[{"x1", "\[Equal]", "\"\<B\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805585627756322*^9, 3.8055856566936817`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2001b08a-60d6-41a2-be9b-ef6d6ad2a838"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8055856610481577`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d9eb232d-0039-4207-bf6a-c4704f312631"]
}, Open  ]]
},
WindowSize->{573.75, 556.5},
WindowMargins->{{308.25, Automatic}, {0, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fff8b6e9-46ff-4aeb-ab59-a2adc0b5d8bc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3197, 77, 202, "Input",ExpressionUUID->"00e47e43-44eb-4cc0-a6ea-63efa024c308"],
Cell[3780, 101, 62801, 1169, 69, "Output",ExpressionUUID->"c3c262c7-04f2-471b-a85a-7558c568f4c9"],
Cell[66584, 1272, 169, 3, 48, "Output",ExpressionUUID->"a07b15c8-ed95-4872-a8e5-d4db6ab7b2c1"],
Cell[66756, 1277, 63504, 1179, 100, "Output",ExpressionUUID->"4021d7e4-a3d6-4890-959b-fb7f5cb0b89d"]
}, Open  ]],
Cell[130275, 2459, 523, 12, 67, "Input",ExpressionUUID->"a41f653b-152c-49a0-ae72-f42f9ce9d3f7"],
Cell[130801, 2473, 448, 11, 28, "Input",ExpressionUUID->"12312d94-aa30-4d12-82bf-d29a83faa3f3"],
Cell[CellGroupData[{
Cell[131274, 2488, 240, 4, 28, "Input",ExpressionUUID->"1ee6c214-66a2-44a9-b192-dcd78ff45bdb"],
Cell[131517, 2494, 171, 3, 48, "Output",ExpressionUUID->"918f34c5-fa02-4fec-abf5-1b5751e9da99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131725, 2502, 307, 6, 28, "Input",ExpressionUUID->"9eeb7159-26b1-4fad-8983-04d422dc19f0"],
Cell[132035, 2510, 169, 3, 48, "Output",ExpressionUUID->"5ad4d564-518c-4e01-aca6-165cdbcef893"]
}, Open  ]],
Cell[132219, 2516, 577, 13, 67, "Input",ExpressionUUID->"e70c19a7-81c8-4fb4-89c7-673a12021fc6"],
Cell[132799, 2531, 677, 19, 48, "Input",ExpressionUUID->"ccf6d51a-6299-4ab0-8743-1e3160aca2e9"],
Cell[CellGroupData[{
Cell[133501, 2554, 304, 6, 28, "Input",ExpressionUUID->"2001b08a-60d6-41a2-be9b-ef6d6ad2a838"],
Cell[133808, 2562, 151, 2, 32, "Output",ExpressionUUID->"d9eb232d-0039-4207-bf6a-c4704f312631"]
}, Open  ]]
}
]
*)

