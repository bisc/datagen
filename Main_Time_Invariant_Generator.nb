(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14349,        338]
NotebookOptionsPosition[     14000,        324]
NotebookOutlinePosition[     14393,        340]
CellTagsIndexPosition[     14350,        337]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "invariantGenerate", "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "for", " ", "time", " ", "invariant", " ", "generation"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invariantGenerate", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "classes", ",", " ", "equalityAdjust", ",", "inequalityAdjust", ",", 
      "  ", "myProbAdjustEquals", ",", "myProbAdjustUnequals", ",", " ", 
      "oParams", ",", " ", "oOutput", ",", " ", "oEquations", ",", " ", 
      "oConstraints", ",", " ", "oSolve", ",", " ", "oRules", ",", " ", 
      "oFinalRules", ",", " ", "oD", ",", " ", "underCheck"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Before\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"classes", " ", "=", " ", "variables"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"variables", ",", " ", "values"}], "}"}], " ", "=", " ", 
      RowBox[{"timeVarVals", "[", 
       RowBox[{"timesteps", ",", " ", "variables", ",", " ", "values"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Adjust Lists\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "classes", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "variables", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "values", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"testAdjust", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Equal", "[", 
         RowBox[{"test1_", ",", " ", "test2_"}], "]"}], ")"}], " ", 
       "\[RuleDelayed]", " ", "test1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"equalityAdjust", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Equal", "[", 
         RowBox[{"test1_", ",", " ", "test2_"}], "]"}], ")"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"switchEquals", "[", 
        RowBox[{
         RowBox[{"Equal", "[", 
          RowBox[{"test1", ",", " ", "test2"}], "]"}], ",", "variables", ",", 
         " ", "values"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inequalityAdjust", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Unequal", "[", 
         RowBox[{"test1_", ",", " ", "test2_"}], "]"}], ")"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"switchUnequals", "[", 
        RowBox[{
         RowBox[{"Unequal", "[", 
          RowBox[{"test1", ",", " ", "test2"}], "]"}], ",", "variables", ",", 
         " ", "values"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myProbAdjustEquals", "=", " ", 
      RowBox[{
       RowBox[{"myProb", "[", "test3_", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"myProb", "[", " ", 
        RowBox[{"test3", " ", "//.", " ", "equalityAdjust"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myProbAdjustUnequals", "=", " ", 
      RowBox[{
       RowBox[{"myProb", "[", "test3_", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"myProb", "[", " ", 
        RowBox[{"test3", " ", "//.", " ", "inequalityAdjust"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"NOTE", ":", " ", 
       RowBox[{
       "specs", " ", "works", " ", "until", " ", "the", " ", "second", " ", 
        "myProbAdjustEquals", " ", "call", "\[IndentingNewLine]", "Something",
         " ", "wrong", " ", "with", " ", "using", " ", "the", " ", 
        "variables", " ", "as", " ", "lists", " ", "here"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"specs", " ", "=", " ", 
        RowBox[{
         RowBox[{"specs", " ", "//.", "definizeRule"}], "//.", 
         "myProbAdjustEquals"}]}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"specs", "  ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"specs", " ", "//.", " ", "myProbAdjustEquals"}], "  ", "//.",
              "definizeRule"}], " ", "//.", " ", "eventsToDNFExtRule"}], " ", 
           "//.", " ", "myProbAdjustUnequals"}], " ", "//.", "definizeRule"}],
          " ", "//.", " ", "eventsToDNFExtRule"}], "  ", "//.", " ", 
        "myProbAdjustEquals"}], " ", "//.", " ", "myProbAdjustUnequals"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<After\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "specs", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Removing", " ", "all", " ", "the", " ", "OR", " ", "operations", " ", 
      "in", " ", "the", " ", "myProb", " ", "and", " ", "myCondProb", " ", 
      "statements"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"equalityAdjust", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Equal", "[", 
         RowBox[{"test1_", ",", " ", "test2_"}], "]"}], ")"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"switchEquals", "[", 
        RowBox[{
         RowBox[{"Equal", "[", 
          RowBox[{"test1", ",", " ", "test2"}], "]"}], ",", "variables", ",", 
         " ", "values"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inequalityAdjust", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Unequal", "[", 
         RowBox[{"test1_", ",", " ", "test2_"}], "]"}], ")"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"switchUnequals", "[", 
        RowBox[{
         RowBox[{"Unequal", "[", 
          RowBox[{"test1", ",", " ", "test2"}], "]"}], ",", "variables", ",", 
         " ", "values"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myProbAdjustEquals", "=", " ", 
      RowBox[{
       RowBox[{"myProb", "[", "test3_", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"myProb", "[", " ", 
        RowBox[{"test3", " ", "/.", " ", "equalityAdjust"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myProbAdjustUnequals", "=", " ", 
      RowBox[{
       RowBox[{"myProb", "[", "test3_", "]"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"myProb", "[", " ", 
        RowBox[{"test3", " ", "/.", " ", "inequalityAdjust"}], "]"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"specs", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"specs", " ", "//.", " ", "myProbAdjustEquals"}], " ", "//.",
            " ", "myProbAdjustUnequals"}], " ", "//.", "definizeRule"}], " ", 
         "//.", "eventsToDNFExtRule"}], " ", "//.", " ", 
        "myProbAdjustEquals"}], " ", "//.", " ", "myProbAdjustUnequals"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<After\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "specs", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Parameterizing", " ", "the", " ", "specifications", " ", "with", " ", 
       "generated", " ", "o", " ", "parameters"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"oParams", " ", "=", " ", 
      RowBox[{"oGen", "[", " ", 
       RowBox[{"variables", ",", " ", "values"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"oOutput", " ", "=", " ", 
      RowBox[{"oOutcomes", "[", "oParams", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"oEquations", "=", " ", 
      RowBox[{
       RowBox[{"specs", " ", "/.", " ", "unconditionedProbability"}], " ", "/.",
        " ", "conditionedProbability"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", "oEquations", "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"oEquations", ",", " ", 
       RowBox[{"givenEquation", "[", "oParams", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Solving", " ", "the", " ", "probability", " ", "system", " ", "based", 
       " ", "on", " ", "the", " ", "specifications", " ", "and", " ", 
       "constraints"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"oConstraints", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Element]", 
         RowBox[{"Interval", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "&"}], "/@", 
       "oOutput"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"oSolve", " ", "=", " ", 
      RowBox[{"TimeConstrained", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"oEquations", ",", "oConstraints"}], "]"}], ",", "oOutput",
           ",", "Reals"}], "]"}], ",", "60", ",", "$Failed"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FailureQ", "[", "oSolve", "]"}], ",", 
       RowBox[{
       "Print", "[", "\"\<Invalid system: solver timed out\>\"", "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Generating", " ", "data", " ", "by", " ", "placing", " ", "the", " ", 
       "solution", " ", "into", " ", "a", " ", "categorical", " ", 
       "distribution"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FailureQ", "[", "oSolve", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "oSolve", "]"}], " ", "\[NotEqual]", " ", 
           "1"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"oSolve", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[NotEqual]", " ", 
           RowBox[{"Length", "[", "oOutput", "]"}]}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"underCheck", " ", "=", " ", 
           RowBox[{"TimeConstrained", "[", 
            RowBox[{
             RowBox[{"FindInstance", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"oEquations", ",", "oConstraints"}], "]"}], ",", 
               "oOutput", ",", "Reals", ",", " ", "1"}], "]"}], ",", "60", 
             ",", "$Failed"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"FailureQ", "[", "underCheck", "]"}], ",", 
            RowBox[{
            "Print", "[", 
             "\"\<Invalid system: distribution either underspecified or \
conflicting\>\"", "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Length", "[", "underCheck", "]"}], " ", "\[Equal]", " ",
              "1"}], ",", 
            RowBox[{
            "Print", "[", 
             "\"\<Underspecified system: needs more valid specifications\>\"",
              "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "True", ",", 
            RowBox[{
            "Print", "[", 
             "\"\<Invalid system: some specifications not consistent\>\"", 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "$Failed"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"oRules", " ", "=", " ", 
           RowBox[{"oSolve", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"oFinalRules", " ", "=", " ", 
           RowBox[{"oRules", "//.", 
            RowBox[{
             RowBox[{"{", "x_", "}"}], "\[RuleDelayed]", "x"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"oD", " ", "=", " ", 
           RowBox[{"CategoricalDistribution", "[", 
            RowBox[{"values", ",", " ", 
             RowBox[{"oParams", " ", "/.", " ", "oFinalRules"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Information", "[", 
           RowBox[{"oD", ",", " ", "\"\<ProbabilityTable\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"oD", ",", " ", "numsamples"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", "\"\<Invalid system: solver timed out\>\"", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQHTcpim1myhvHIOtnYFokvowbRJuk3xUG0RdWzP87
C0jvie9imw2kS/7tEQDRk+5JCIHojKjpGiB6wfInYDrR9KshiD714YUxiObb
9MkcRM9Zke4Ior0Y57iB6E1hn3xB9LV5PFd2Aemzuh5guvn34hcgumqa7EsQ
PUk5fs2p1DeOeoLXwHSPcc5tEN3n7n8HRLd8tVY6B6SrCs+C6ZzpDeogWqp+
ngaI1vmcaQWi9ykK2oLoFZ82OYLouocsniB6vpWpH4g+8NcXTLvk+AaB6Ds7
ZoLpe69aokH0hRKOWBB96MbjBBAtE7c/DUSH9b6oBNHaHabVIPr1tafND4G0
T/68FhAt8VJsOoh2+vseTH/b7L0SRG9WCwPTS3bMP/8h7Y0jb8jnKyAaAADC
2OU=
  "],ExpressionUUID->"71af5f76-0a7f-475a-9ea0-84c70916ed19"]
},
WindowSize->{808, 706},
WindowMargins->{{Automatic, 30}, {1, Automatic}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1f2bddd3-45fd-4d1e-b6ad-5bf513510436"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 13438, 302, 1900, "Input",ExpressionUUID->"71af5f76-0a7f-475a-9ea0-84c70916ed19"]
}
]
*)

